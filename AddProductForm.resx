<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zMzMzKx0/w+px2gvCNKkgQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="uploadBtn.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASeSURBVHhe7d3dq2VzGAfwCSOiTN6SK0URKaUYXDy54g/A
        DTeTkLynuJiLr2tuaGpceE1cmCjxBzwXijSYM2N0mjRRKH+AMJJHD2trz/fsvfZ6fSy/9Xzq3Jy9futZ
        +/udvWaftffZZ9eulFJKKaWUUkqNicjZAO5T1RdU9XkA94rIbt4uBRCRy81sy3Y64rfx9mlEInKZmZ3g
        JpZs+za8Lo2gKmObG1ghSxlbizIWspSxdChj4WsRuZT3l3rwQD1YTrqFLGUoA5SxkKX0NWAZC1+JyCU8
        JzXgwXmAnOgAjmUpLVVlHOMkB5SlNBVQxsJREbmI56clHlBQGQtbWcoaVRmrrk2NLUthVRlHOaka3/I3
        VmiyzYKXciEf1yx1eGR8qqp7+ZtMVW/2bfn7Nb6cfSkegAfBydT4TEQuAHAd38AAXOvb+hq+rcZ8S+la
        hq9tWkg1x0s5zLfX+FxE9vDxFk1EzvU7zknU+GI5JA+bN2CLQqp5e1qWf1hEzvn3gEunqs9yAjX8NHLa
        v9i2hbiqlCO83Tqq+vTy+qKZ2SccwBr+cuyOc3qXQlx1mmz6BOJjXl8sMzvO936FtU9FuxbiWjzF3uK1
        xTKzt/jeE7/WtPaHtTb/qa9SlbLpwuWrvK5YAK43s184gcrGa0x9C3Ebrpn9DOAqXlM0ALeueOfIe5vK
        cH1OWcuqR8oHtPQbALfwtrMgImcA2AvgbgBX8O3rDFXIAoArAdzjx+LHxLenDYY4ZaUBZSETk4VMTBYy
        MVnIxGQhE5OFTEwWMjFZyMRkIROThUxMFjIxWcjEZCETk4VMTBbyz1t3Hq/esfGrvxtEVR/hbaJ42FwA
        +y8LGT0rM3uH73DlNd42wpQLGT0rAHfxnpcBuIPXjG2qp6yQrMzsFd4xeYnXjG2qj5CQrMzsEO+VvMtr
        xjbhQsbPqsGQQ7xmbFM9ZYVkFTKkpSykXv8hLWUh9foPaSkLqdd/SEtZSL3+Q1rKQur1H9JSFlKv/5CW
        AFzDB8EAXM3rxhaSVYMh/X/YaQnA+Wb2Ox/IklMAzuN1YwvJKmRIBzUX8dybvH2EkKwaDOn/MOxARC5e
        8xtQp/0KdaSQrBoM6d96R/675P5ag5m9YWavA7jfP+2at4sSklWDIf1bL0RIViFDChGSVciQQoRkFTKk
        ECFZhQwpREhWIUMKEZJVyJBChGQVMqQQIVmFDClESFYhQwoRklXIkEKEZBUypBAhWW24zO0+5DVzZWYf
        cTjkbV7Tmpkd4L2SH0XkTF43NyJylpn9xOGQF3ldawAe470yVX2I182Nqj7BuTAAD/O61gDcyDte4TdV
        fXCOH/7lZwdVfXLDS8p/84825PWdmNl3vPM1fvCP6ateMJrD1/sNTlMLJzjXzlT1Gd57akdVH+VcOxMR
        f5fH9zwkNXZy8I8uV9U7zexPnpQ2+gPAbZznIFR1P09L9QY9Va2iqk956zw47XBKVfdxfqNQ1dtb/kmh
        udn2v/DDuY3K/waIqvoPjSf5aGbsuKr6e8N2c15hqk+nvgnAA6r6nJm9vOL5eqlfBwHsB7APwA2cTUop
        pZRSSin9H/wFwYrJewfKsWwAAAAASUVORK5CYII=
</value>
  </data>
</root>